DBC VS Mybatis
JDBC程序的缺点:
  1.url,username,password等相关参数全部硬编码在java代码中
  2.查询结果的解析和封装比较繁琐
  3.每一次操作数据库之前需要先获取连接,操作完毕之后再关闭连接.频繁的获取连接和释放连接会造成资源浪费
Mybatis解决问题:
  1.数据库连接四要素(驱动,链接,用户名,密码)都配置在SpringBoot默认的配置文件application.properties中
  2.查询结果的解析及封装都由Mybatis自动完成映射封装,我们无需关注
  3.在Mybatis中使用了数据库连接池技术从而避免了频繁的创建连接和销毁连接而带来的资源浪费
因此使用SpringBoot+Mybatis的方式操作数据库能够提升开发效率和降低资源浪费


数据库连接池是个负责分配,管理数据库连接(Connection)的容器(以线程池为基础来理解)
  - 程序在启动时会在数据库连接池(容器)中创建一定数量的Connection对象
它允许应用程序重复使用一个现有的数据库连接,而不是再重新建立一个
  - 客户端在执行SQL时先从连接池中获取一个Connection对象,然后在执行SQL语句,SQL语句执行完之后释放Connection时就会把Connection对象归还给连接池(Connection对象可以复用)
它还会释放空闲时间超过最大空闲时间的连接(计时器),来避免因为没有释放连接而引起的数据库连接遗漏
  - 客户端获取到Connection对象但是Connection对象并没有去访问数据库(处于空闲),数据库连接池发现Connection对象的空闲时间>连接池中预设的最大空闲时间,此时数据库连接池就会自动释放掉这个连接对象
数据库连接池的好处:
  - 资源重用
  - 提升系统响应速度
  - 避免数据库连接遗漏


数据库连接池的方式:
  - 官方(sun)提供了数据库连接池标准(javax.sql.DataSource接口)
  - public Connection getConnection() throws SQLException; 获取连接
  - 第三方组织必须按照DataSource接口实现
常见的数据库连接池:C3P0,DBCP,Druid,Hikari(SpringBoot默认)
现在使用更多的是(性能更优越):Hikari,Druid
  1.Hikari(追光者)[默认的连接池]
    从控制台输出的日志我们也可以看出,SpringBoot底层默认使用的数据库连接池就是Hikari
  2.Druid(德鲁伊)
    是阿里巴巴开源的数据库连接池项目,功能强大,性能优秀,是Java语言最好的数据库连接池之一
    如果我们想把默认的数据库连接池切换为Druid数据库连接池,只需要完成以下两步操作即可:
      - 在pom.xml文件中引入依赖
      - 在application.properties中引入数据库连接配置


Mybatis增删查改操作:
  - 在Mybatis中可以通过参数占位符号#{...}来占位,在调用删除方法时传递的参数值最终会替换为?占位符,生成预编译的SQL语句
  - 实际上Mybatis提供的占位符号有两个:
    a.#{...} 占位符,拼接时会将#{...}替换为?来生成预编译的SQL语句 用于参数值传递 安全,性能高(推荐)
    b.${...} 拼接符,直接将参数拼接在SQL语句中,会存在SQL注入问题 表名,字段名动态设置时使用 不安全,性能低
    在企业开发中也强烈建议使用#{...}
  1.删除:
    @Delete(SQL的DML删除语句)
    public void deleteByXxx(...)
  2.添加:
    @Insert(SQL的DML插入语句)
    public void insert(...)
    如果在SQL语句中我们需要传递多个参数,可以把多个参数封装到一个对象中,然后在SQL语句中我们可以通过#{对象属性名}的方式来获取到对象中封装的属性值
  3.修改:
    @Update(SQL的DML修改语句)
    public void update(...)
  4.查询:
    @Select(SQL的DML查询语句)
    public void selectByXxx(...)
    其中可以形参可以使用@Param注解,其作用是为接口的方法形参起名
    基于官方骨架创建的springboot项目中,接口编译时会保留方法形参名,@Param注解可以省略(#{形参名})


XML映射配置:使用Mybatis的注解方式主要是来完成一些简单的增删改查功能,如果需要实现复杂的SQL功能建议使用XML来配置映射语句,也就是将SQL语句写在XML配置文件中
  1.XML映射文件的名称与Mapper接口名称一致并且将XML映射文件和Mapper接口放置在相同包下(同包同名)
  2.XML映射文件的namespace属性为Mapper接口全限定名一致
  3.XML映射文件中sql语句的id与Mapper接口中的方法名一致,并保持返回类型一致


SpringBoot的yml配置文件的基本语法:
  - 大小写敏感
  - 数值前边必须有空格,作为分隔符
  - 使用缩进表示层级关系,缩进时不允许使用Tab键,只能用空格(idea中会自动将Tab转换为空格)
  - 缩进的空格数目不重要,只要相同层级的元素左侧对齐即可
  - #表示注释,从这个字符一直到行尾,都会被解析器忽略
注意:在yml格式的配置文件中,如果配置项的值是以0开头的,值需要使用''引起来,因为以0开头在yml中表示8进制的数据
