<?xml version="1.0" encoding="UTF-8" ?>
<!--定义Mapper映射文件的约束和基本结构-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.EmpMapper">

    <select id="pagelist" resultType="org.example.pojo.Emp">
        <!-- 优化方法二:动态SQL——指的就是随着用户的输入或外部的条件的变化而变化的SQL语句
             <if>:判断条件是否成立,如果条件为true则拼接SQL
             <where>:根据查询条件,来生成where关键字,并会自动去除条件前面多余的and或or
        -->
        select e.*, d.name deptName from emp as e left join dept as d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>
    </select>

    <!-- 批量删除员工信息 -->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!-- 定义ResultMapper -->
    <!-- Mybatis中封装查询结果，什么时候用resultType，什么时候用resultMap
           - 如果查询返回的字段名与实体的属性名可以直接对应上用resultType
           - 如果查询返回的字段名与实体的属性名对应不上或实体属性比较复杂可以通过resultMap手动封装 -->
    <resultMap id="empResultMap" type="org.example.pojo.Emp">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="phone" property="phone" />
        <result column="job" property="job" />
        <result column="salary" property="salary" />
        <result column="image" property="image" />
        <result column="entry_date" property="entryDate" />
        <result column="dept_id" property="deptId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

        <!--封装exprList-->
        <collection property="exprList" ofType="org.example.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_empid" property="empId"/>
        </collection>
    </resultMap>

    <!-- 根据id查询用户信息 -->
    <select id="getById" resultMap="empResultMap">
        select e.*,
               ee.id ee_id,
               ee.begin ee_begin,
               ee.end ee_end,
               ee.company ee_company,
               ee.job ee_job
        from emp e left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id}
    </select>

    <!-- 根据ID动态更新员工信息(动态SQL) -->
    <update id="update">
        <!-- set标签:
             1. 自动生成set关键字
             2. 自动删除更新字段后面多余的逗号","-->
        update emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>

    <!-- 统计各个职位的员工人数 -->
    <select id="countEmpJobData" resultType="java.util.Map">
#             case流程控制函数：
#                 - 语法一：case when cond1 then res1 [ when cond2 then res2 ] else res end ;
#                 - 含义：如果 cond1 成立， 取 res1。  如果 cond2 成立，取 res2。 如果前面的条件都不成立，则取 res。
#
#                 - 语法二（仅适用于等值匹配）：case expr when val1 then res1 [ when val2 then res2 ] else res end ;
#                 - 含义：如果 expr 的值为 val1 ， 取 res1。  如果  expr 的值为 val2 ，取 res2。 如果前面的条件都不成立，则取 res。
        select
            (case job when 1 then '班主任'
                      when 2 then '讲师'
                      when 3 then '学工主管'
                      when 4 then '教研主管'
                      when 5 then '咨询师'
                      else '其他' end) pos,
            count(*) num
        from emp group by job
        order by num
    </select>

    <!-- 统计员工的性别信息 -->
    <select id="countEmpGenderData" resultType="java.util.Map">
#         if函数语法：
#           if(条件, 条件为true取值, 条件为false取值)
#                   ifnull函数语法：ifnull(expr, val1) 如果expr不为null，取自身，否则取val1
        select
            if(gender = 1, '男', '女') as name,
            count(*) as value
        from emp group by gender ;
    </select>

</mapper>