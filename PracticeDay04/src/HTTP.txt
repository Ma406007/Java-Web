HTTP(Hyper Text Transfer Protocol):超文本传输协议,规定了浏览器与服务器之间数据传输的规则
  1.http是互联网上应用最为广泛的一种网络协议
  2.http协议要求：浏览器在向服务器发送请求数据时,或是服务器在向浏览器发送响应数据时,都必须按照固定的格式进行数据传输
HTTP协议的特点:
  1.基于TCP协议:面向连接,安全
    TCP是一种面向连接的(建立连接之前是需要经过三次握手),可靠的,基于字节流的传输层通信协议,在数据传输方面更安全

  2.基于请求-响应模型:一次请求对应一次响应(先请求后响应)

    请求和响应是一一对应的关系,没有请求就没有响应

  3.HTTP协议是无状态协议:对于数据没有记忆能力,每次请求-响应都是独立的
    无状态指的是客户端发送HTTP请求给服务端之后服务端根据请求响应数据,响应完后不会记录任何信息。
    - 缺点:多次请求间不能共享数据
    - 优点:速度快

  4.请求之间无法共享数据会引发的问题：
    - 如:京东购物,加入购物车和去购物车结算是两次请求
    - 由于HTTP协议的无状态特性,加入购物车请求响应结束后并未记录加入购物车是何商品
    - 发起去购物车结算的请求后,因为无法获取哪些商品加入了购物车,会导致此次请求无法正确展示数据
    - 具体使用的时候,我们发现京东是可以正常展示数据的,原因是Java早已考虑到这个问题,并提出了使用会话技术(Cookie、Session)来解决这个问题


HTTP请求协议:浏览器将数据以请求格式发送到服务器,包括请求行,请求头和请求体
GET方式的请求协议:
  1.请求行:HTTP请求中的第一行数据,由请求方式,资源路径和协议/版本组成(三者之间使用空格分隔)
    例如:GET /brand/findAll?name=OPPO&status=1 HTTP/1.1
        - 请求方式:GET
        - 资源路径:/brand/findAll?name=OPPO&status=1
            - 请求路径:/brand/findAll
            - 请求参数:name=OPPO&status=1
                注意:
                - 请求参数是以key=value形式出现
                - 多个请求参数之间使用&连接
            - 请求路径和请求参数之间使用?连接
        - 协议/版本:HTTP/1.1

  2.请求头:HTTP请求中的第二行开始的若干行数据(格式为key: value形式)
    - http是个无状态的协议,所以在请求头设置浏览器的一些自身信息和想要响应的形式,这样服务器在收到信息后就可以知道是谁想干什么了
    - 常见的HTTP请求头有:
        Host:表示请求的主机名
        org.example.User-Agent:浏览器版本
        Accept:标识浏览器能接收的资源类型,如text/*,image/*或者*/*表示所有
        Accept-Language:表示浏览器偏好的语言,服务器可以据此返回不同语言的网页
        Accept-Encoding:表示浏览器可以支持的压缩类型,例如gzip,deflate等
        Content-Type:请求主体的数据类型
        Content-Length:数据主体的大小(单位:字节)
    举例说明:服务端可以根据请求头中的内容来获取客户端的相关信息,有了这些信息服务端就可以处理不同的业务需求
       比如:
       - 不同浏览器解析HTML和CSS标签的结果会有不一致,所以就会导致相同的代码在不同的浏览器会出现不同的效果
       - 服务端根据客户端请求头中的数据获取到客户端的浏览器类型,就可以根据不同的浏览器设置不同的代码来达到一致的效果(这就是我们常说的浏览器兼容问题)

  3.请求体:存储请求参数
    - GET请求的请求参数在请求行中,故不需要设置请求体

POST方式的请求协议:格式大致与GET方式的请求协议相同,不再赘述

GET请求与POST请求的区别:
  1.请求参数:
    - GET请求的请参参数在请求行中,例如/brand/findAll?name=OPPO&status=1
    - POST请求的请求参数在请求体中

  2.请求参数长度:
    - GET请求的请求参数长度有限制(浏览器不同限制也就不同)
    - POST请求的请求参数长度没有限制

  3.安全性:
    - GET请求的安全性低,原因是请求参数暴露在浏览器地址栏中
    - POST请求的安全性相对高


HTTP响应协议:服务器将数据以响应格式返回给浏览器,包括响应行,响应头和响应体
  1.响应行:响应数据的第一行,由协议及版本,响应状态码和状态码描述组成(三者之间由空格隔开)
    - 协议/版本:HTTP/1.1
    - 响应状态码:200
    - 状态码描述:OK

  2.响应头:响应数据的第二行开始,格式为key: value形式
    - http是个无状态的协议,所以可以在请求头和响应头中设置一些信息和想要执行的动作,这样对方在收到信息后就可以知道你是谁你想干什么
    - 常见的HTTP响应头有:
        Content-Type:表示该响应内容的类型,例如text/html,image/jpeg
        Content-Length:表示该响应内容的长度(字节数)
        Content-Encoding:表示该响应压缩算法,例如gzip
        Cache-Control:指示客户端应如何缓存,例如max-age=300表示可以最多缓存300秒
        Set-Cookie:告诉浏览器为当前页面所在的域设置cookie

  3.响应体:响应数据的最后一部分,存储响应的数据
    - 响应体和响应头之间有一个空行隔开(作用:用于标记响应头结束)

响应状态码:
  1xx:响应中--临时状态码,表示请求已经结束,告诉客户端应该继续请求或者如果已经完成则忽略
  2xx:成功--表示请求已经被成功接收,处理已完成 200 ok:客户端请求成功
  3xx:重定向--重定向到其他地方,让客户端再发起一个请求以完成整个处理
  4xx:客户端错误--处理发生错误,责任在客户端,如:客户端请求一个不存在的资源,客户端未被授权,禁止访问等 404 Not Found:请求资源不存在
  5xx:服务器端错误--处理发生错误,责任在服务端,如:服务端抛出异常,路由出错,HTTP版本不支持等 500 Internal Server Error:服务端发生不可预期的错误
