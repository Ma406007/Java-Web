Ajax(Asynchronous JavaScript And XML)即异步的JavaScript和XML,其作用有如下2点:
  1.与服务器进行数据交互:通过Ajax可以给服务器发送请求,并获取服务器响应的数据
    前端可以通过Ajax技术向后台服务器发起请求,后台服务器接受到前端的请求,从数据库中获取前端需要的资源后响应给前端
    前端在通过我们学习的vue技术可以将数据展示到页面上,这样用户就能看到完整的页面了
  2.异步交互:可以在不重新加载整个页面的情况下与服务器交换数据并更新部分网页的技术,如:搜索联想,用户名是否可用的校验等等
    当我们再百度搜索java时下面的联想数据是通过Ajax请求从后台服务器得到的,
    在整个过程中,我们的Ajax请求不会导致整个百度页面的重新加载,
    并且只针对搜索栏这局部模块的数据进行了数据的更新,不会对整个页面的其他地方进行数据的更新,这样就大大提升了页面的加载速度从而提升用户体验
XML(Extensible Markup Language):可扩展标记语言,本质是一种数据格式,可以用来存储复杂的数据结构


针对于上述Ajax的局部刷新功能是因为Ajax请求是异步的,与之对应的有同步请求:
1.同步请求:
    浏览器页面在发送请求给服务器,在服务器处理请求的过程中,浏览器页面不能做其他的操作,只能等到服务器响应结束后才能继续操作
2.异步请求:
    浏览器页面在发送请求给服务器,在服务器处理请求的过程中,浏览器页面可以做其他的操作


使用原生的Ajax请求的代码编写起来还是比较繁琐的，通常使用更加简单的发送Ajax请求的技术Axios,Axios是对原生的AJAX进行封装,可以简化书写(官网:https://www.axios-http.cn/)


Axios还针对不同的请求提供了别名方式的api,具体格式:axios.请求方式(url, data, config),具体如下:
  1.axios.get(url, config) 发送get请求
  2.axios.delete(url, config) 发送delete请求
  3.axios.post(url, data, config) 发送post请求
  4.axios.put(url, data, config) 发送put请求


Vue生命周期:指的是Vue对象从创建到销毁的过程,共包含8各阶段:
  每触发一个生命周期事件就会自动执行一个生命周期方法,这些生命周期方法也被称为钩子方法
  1.beforeCreate:创建前
  2.created:创建后
  3.beforeMount:挂载前
  4.mounted:挂载完成,Vue初始化成功,HTML页面渲染成功,一般用于页面初始化自动的Ajax请求后台数据
  5.beforeUpdate:更新前
  6.updated:更新后
  7.beforeDestroy:销毁前
  8.destroyed:销毁后