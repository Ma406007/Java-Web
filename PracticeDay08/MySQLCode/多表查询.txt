多表关系分为三种:
1.一对多(多对一):
  场景:部门与员工的关系(一个部门下有多个员工)
2.一对一:
  一对一关系表在实际开发中应用起来比较简单,通常是用来做单表的拆分也就是将一张大表拆分成两张小表,将大表中的一些基础字段放在一张表当中,将其他的字段放在另外一张表当中,以此来提高数据的操作效率
  一对一的应用场景:用户表(基本信息+身份信息)
3.多对多:
  多对多的关系在开发中属于也比较常见的,比如:学生和老师的关系,一个学生可以有多个授课老师,一个授课老师也可以有多个学生.在比如:学生和课程的关系,一个学生可以选修多门课程,一个课程也可以供多个学生选修
  案例:学生与课程的关系
    - 关系:一个学生可以选修多门课程,一门课程也可以供多个学生选择
    - 实现关系:建立第三张中间表,中间表至少包含两个外键,分别关联两方主键

外键约束(foreign key):让两张表的数据建立连接,保证数据的一致性和完整性,建立外界约束有两种方法:
   1.创建表时指定
create table 表名(
        字段名 数据类型,
        ...
        [constraint] [外键名称] foreign key (外键字段名) references 主表 (主表列名)
);
  2.建完表后，添加外键
alter table 表名 add constraint 外键名称 foreign key (外键字段名) references 主表(主表列名);

外键有以下两种类型:
  1.物理外键
    - 概念:使用foreign key定义外键关联另外一张表
    - 缺点:
      - 影响增删改的效率(需要检查外键关系)
      - 仅用于单节点数据库,不适用于分布式,集群场景
      - 容易引发数据库的死锁问题,消耗性能
  2.逻辑外键
    - 概念:在业务层逻辑中解决外键关联(即在SQL界面不会直观体现出foreign key)
    - 通过逻辑外键就可以很方便地解决上述问题
在现在的企业开发中很少会使用物理外键,都是使用逻辑外键,甚至在一些数据库开发规范中会明确指出禁止使用物理外键foreign key


多表查询可以分为：
  1.连接查询
    - 内连接:相当于查询A和B交集部分数据
      - 隐式内连接:
        select 字段列表 from 表1, 表2 where 条件 ... ;
      - 显式内连接:
        select 字段列表 from 表1 [inner] join 表2 on 连接条件 ... ;
    - 外连接:
      - 左外连接:查询左表所有数据(包括两张表交集部分数据)
      - 右外连接:查询右表所有数据(包括两张表交集部分数据)
  2.子查询


为表起别名(一旦为表起了别名就不能再使用表名来指定对应的字段了,此时只能够使用别名来指定字段):
  select 字段列表 from 表1 [as] 别名1, 表2 [as] 别名2 where 条件 ... ;


外连接:
  - 左外连接:
    select 字段列表 from 表1 left [outer] join 表2 on 连接条件 ... ;
    左外连接相当于查询表1(左表)的所有数据,当然也包含表1和表2交集部分的数据
  - 右外连接:
    select 字段列表 from 表1 right [outer] join 表2 on 连接条件 ... ;
    右外连接相当于查询表2(右表)的所有数据,当然也包含表1和表2交集部分的数据
左外连接和右外连接是可以相互替换的,只需要调整连接查询时SQL语句中表的先后顺序就可以了,而我们在日常开发使用时更偏向于左外连接


子查询(嵌套查询):SQL语句中嵌套select语句:
子查询外部的语句可以是insert/update/delete/select中的任何一个,最常见的是select
根据子查询结果的不同分为：
1.标量子查询(子查询结果为单个值[一行一列])
  - 子查询返回的结果是单个值(数字、字符串、日期等),最简单的形式,这种子查询称为标量子查询
  - 常用的操作符: = <> > >= < <=
2.列子查询(子查询结果为一列,但可以是多行)
  - 子查询返回的结果是一列(可以是多行),这种子查询称为列子查询
  - 常用的操作符:
    - in 在指定的集合范围之内,多选一
    - not in 不在指定的集合范围之内
3.行子查询(子查询结果为一行,但可以是多列)
  - 子查询返回的结果是一行(可以是多列),这种子查询称为行子查询
  - 常用的操作符:= <> in not in
4.表子查询(子查询结果为多行多列[相当于子查询结果是一张表])
  - 子查询返回的结果是多行多列,常作为临时表,这种子查询称为表子查询
子查询可以书写的位置:
1.where之后
2.from之后
3.select之后
